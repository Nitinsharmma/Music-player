<!DOCTYPE html>
<html lang="en">
<head>

    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.2/css/all.min.css">
	<title>Musicplayer</title>
	</head>

<style>
@import url('https://fonts.googleapis.com/css2?family=Quicksand:wght@700&display=swap');
html {
box-sizing: border-box ;
--parent-height : 20em ;
--duration: 1s ;
--duration-text-wrap: 12s 1.5s cubic-bezier(0.82, 0.82, 1, 1.01) ;
--cubic-header: var(--duration) cubic-bezier(0.71, 0.21, 0.3, 0.95) ;
--cubic-slider : var(--duration) cubic-bezier(0.4, 0, 0.2, 1) ;
--cubic-play-list : .35s var(--duration) cubic-bezier(0, 0.85, 0.11, 1.64) ;
--cubic-slider-context : cubic-bezier(1, -0.01, 1, 1.01) ;
}

html *,
html *::before,
html *::after {
 box-sizing: inherit ;
scrollbar-width: none ;
}
body{
margin: 0 ;
height: 100vh ;
display: flex ;
user-select: none ;
align-items: center ;
justify-content: center ;
font-family: 'Quicksand', sans-serif ;
color: white;
-webkit-tap-highlight-color: transparent ;
transition: background-color var(--cubic-slider) ;
}

.img {
width: 100% ;
flex-shrink: 0;
display: block ;
object-fit: cover ;
}
.list {
margin: 0 ;
padding: 0 ;
list-style-type: none ;
}
.flex {
display: flex ;
align-items: center ;
justify-content: space-between ;
}
.uppercase{
text-transform: uppercase ;
color:white;
}
.player {
width: 18.15em ;
display: flex ;
overflow: hidden ;
font-size: 1.22em ;
color: black;
border-radius: 1.35em ;
flex-direction: column ;
background-color: peachpuff ;
height: var(--parent-height) ;
}
.player__header {
color: black;
z-index: 1 ;
gap: 0 .4em ;
width: 100% ;
display: flex;
height: 5.85em ;
flex-shrink: 0 ;
position: relative;
align-items: flex-start ;
border-radius: inherit ;
justify-content: flex-end ;
background-color: peachpuff;
padding: .95em 0.6em 0 1.2em ;
box-shadow: 0 2px 6px 1px #0000001f ;
transition: height var(--cubic-header), box-shadow var(--duration), padding var(--duration) ease-in-out ;
}
.player__header.open-header {
height: 100% ;
padding-left: 0 ;
padding-right: 0 ;
box-shadow: unset ;
}
.player__img {
width: 3.22em ;
height: 3.22em ;
border-radius: 1.32em ;
}
.player__img--absolute {
top: 1.4em ;
left: 1.2em ;
position: absolute ;
}
.slider {
flex-shrink: 0 ;
overflow: hidden ;
transition: width var(--cubic-header), height var(--cubic-header), top var(--cubic-header), left var(--cubic-header);
}
.slider.open-slider{
top: 0 ;
left: 0 ;
width: 100% ;
height: 14.6em ;
}
.slider__content {
display: flex ;
height: 100% ;
will-change : transform ;
transition: transform var(--cubic-slider);
}
.slider__img {
filter: brightness(75%) ;
}
.slider__name,
.slider__title {
overflow: hidden ;
white-space: nowrap ;
}
.text-wrap {
display: block ;
white-space: pre ;
width: fit-content ;
animation: text-wrap var(--duration-text-wrap) infinite ;
}
@keyframes text-wrap {
75%{
transform: translate3d(-51.5%, 0, 0) ;
}
100%{
transform: translate3d(-51.5%, 0, 0) ;
}
}
.player__button {
all: unset ;
z-index: 100 ;
width: 2.5em ;
height: 2.5em ;
cursor: pointer ;
}
.playlist {
transform: scale(0) ;
transition: transform calc(var(--duration) / 2) ;

}
.slider.open-slider .playlist {
transform: scale(1) ;
transition: transform var(--cubic-play-list) ;
}
.player__button--absolute--nw {
top: 5.5% ;
left: 5.5% ;
position: absolute ;
}
.player__button--absolute--center {
top: 0 ;
left: 0 ;
right: 0 ;
bottom: 0 ;
margin: auto ;
position: absolute ;
}
img[alt ="pause-icon"] {
display: none ;
}
.player__controls {
width: 77% ;
gap: .5em 0 ;
display: flex ;
flex-wrap: wrap ;
align-items: center ;
will-change: contents ;
align-content: center ;
justify-content: center ;
transition: transform var(--cubic-header) , width var(--cubic-header) ;
}
.player__controls.move {
width: 88% ;
transform: translate3d(-1.1em , calc(var(--parent-height) - 153%) , 0) ;
}
.player__context {
margin: 0 ;
width: 100% ;
display: flex ;
line-height: 1.8 ;
flex-direction: column ;
justify-content: center ;
text-transform: capitalize ;
}
.slider__context {
width: 56.28% ;
cursor: pointer ;
text-align: center ;
padding-bottom: .2em ;
will-change: contents ;
transition: width var(--cubic-header) ;
animation: calc(var(--duration) / 2) var(--cubic-slider-context) ;
}
@keyframes opacity {
0% {
opacity: 0 ;
}
90%{
opacity: 1 ;
}
}
.player__controls.move .slider__context{
width: 49.48% ;
}
.player__title {
font-size: .7em ;
font-weight: bold ;
}
.progres {
width: 90% ;
height: .25em ;
cursor: pointer ;
border-radius: 1em ;
touch-action : none ;
background-color: #e5e7ea ;
transition: width var(--cubic-header) ;
}
.player__controls.move .progres{
width: 98% ;
}
.progres__filled {
width: 0% ;
height: 100% ;
display: flex ;
position: relative ;
align-items: center ;
border-radius: inherit ;
background-color: #78adfe ;
}
.progres__filled::before {
right: 0 ;
width: .35em ;
content: " " ;
height: .35em ;
border-radius: 50% ;
position: absolute ;
background-color: #5781bd ;
}
.player__playlist {
height: 100% ;
overflow: auto ;
padding: 1.05em .9em 0 1.2em ;
}
.player__playlist::-webkit-scrollbar {
width: 0 ;
}
.player__song {
/* gap: 0 .65em ; */
display: flex ;
cursor: pointer ;
margin-bottom: .5em ;
padding-bottom: .7em ;
border-bottom: .1em solid #d8d8d859 ;
}
.player__song .player__context {
line-height: 1.5 ;
margin-left: .65em ;
}
.player__song-name {
font-size: .88em ;
}
.player__song-time {
font-size: .65em ;
font-weight: bold ;
color: black;
height: fit-content ;
align-self: flex-end ;
}
.audio {
display: none !important ;
}


/* Add hover border to player songs */
.player__song:hover {
    border: 2px solid #f08080; /* Change the color to your preferred hover border color */
    border-radius: 10px;       /* Optional: round the corners */
    transition: border 0.3s ease; /* Smooth transition effect */
}

/* Add hover effect to buttons */
.player__button:hover {
    border: 2px solid #f08080;
    border-radius: 50%;       /* For circular buttons */
    transition: border 0.3s ease;
}

/* Add hover effect to images */
.player__img:hover {
    border: 3px solid #f08080; /* Slightly thicker border for images */
    border-radius: 10px;
    transition: border 0.3s ease, transform 0.3s ease;
    transform: scale(1.05);   /* Slightly enlarges the image */
}

body {
    margin: auto;
    font-family: -apple-system, BlinkMacSystemFont, sans-serif;
    overflow: auto;
    background: linear-gradient(315deg, rgba(101,0,94,1) 3%, rgba(60,132,206,1) 38%, rgba(48,238,226,1) 68%, rgba(255,25,25,1) 98%);
    animation: gradient 15s ease infinite;
    background-size: 400% 400%;
    background-attachment: fixed;
}

@keyframes gradient {
    0% {
        background-position: 0% 0%;
    }
    50% {
        background-position: 100% 100%;
    }
    100% {
        background-position: 0% 0%;
    }
}

.wave {
    background: rgb(255 255 255 / 25%);
    border-radius: 1000% 1000% 0 0;
    position: fixed;
    width: 200%;
    height: 12em;
    animation: wave 10s -3s linear infinite;
    transform: translate3d(0, 0, 0);
    opacity: 0.8;
    bottom: 0;
    left: 0;
    z-index: -1;
}

.wave:nth-of-type(2) {
    bottom: -1.25em;
    animation: wave 18s linear reverse infinite;
    opacity: 0.8;
}

.wave:nth-of-type(3) {
    bottom: -2.5em;
    animation: wave 20s -1s reverse infinite;
    opacity: 0.9;
}

@keyframes wave {
    2% {
        transform: translateX(1);
    }

    25% {
        transform: translateX(-25%);
    }

    50% {
        transform: translateX(-50%);
    }

    75% {
        transform: translateX(-25%);
    }

    100% {
        transform: translateX(1);
    }
}
.menu {
    width: 100%;
    background: transparent;
    padding: 1em 0;
    position: fixed;
    top: 0;
    left: 0;
    z-index: 10;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
}

.menu__list {
    list-style: none;
    display: flex;
    justify-content: center;
    margin: 0;
    padding: 0;
}

.menu__list li {
    margin: 0 1.5em;
}

.menu__link {
    text-decoration: none;
    font-size: 1.1em;
    color: white;
    font-weight: bold;
    text-transform: uppercase;
    transition: color 0.3s ease, border-bottom 0.3s ease;
    border-bottom: 2px solid transparent;
}

.menu__link:hover {
    color: #ff00b3;
    border-bottom: 2px solid #ff00b3;
}

.menu__link:active {
    color: #60ffdc;
    border-bottom: 2px solid #60ffdc;
}

/* Responsive Menu */
@media (max-width: 768px) {
    .menu__list {
        flex-direction: column;
        align-items: center;
    }

    .menu__list li {
        margin: 0.5em 0;
    }
}


</style>

<body>
<nav class="menu">
    <ul class="menu__list">
        <li><a href="musicplayer.html" class="menu__link">Home</a></li>
        <li><a href="#playlist" class="menu__link">Playlist</a></li>
        <li><input type="Search" class="Search" placeholder="Search"></a></li>
        <li><a href="FORM.html" class="menu__link">Log In</a></li>
        
    </ul>
</nav>
<h1>Music Player</h1>

</body>
<div class="player">
<div class="player__header">
<div class="player__img player__img--absolute slider">
<button class="player__button player__button--absolute--nw playlist">
<img src="http://physical-authority.surge.sh/imgs/icon/playlist.svg" alt="playlist-icon">
</button>
<button class="player__button player__button--absolute--center play">
<img src="http://physical-authority.surge.sh/imgs/icon/play.svg" alt="play-icon">
<img src="http://physical-authority.surge.sh/imgs/icon/pause.svg" alt="pause-icon">
</button>

<div class="slider__content">
<img class="img slider__img" src="jotum.jfif" alt="cover">
<img class="img slider__img" src="choolo.jfif" alt="cover">
<img class="img slider__img" src="bandeya.jfif" alt="cover">
<img class="img slider__img" src="aaj bhi.jfif" alt="cover">
<img class="img slider__img" src="terigalliyan.jfif" alt="cover">
<img class="img slider__img" src="tu hi meri shab hai.jfif" alt="cover">
<img class="img slider__img" src="tum ho.jfif" alt="cover">
<img class="img slider__img" src="ishq.jfif" alt="cover">
<img class="img slider__img" src="terebina.jfif" alt="cover">
<img class="img slider__img" src="kesariya.jfif" alt="cover">
<img class="img slider__img" src="piyaaayena.jfif" alt="cover">
<img class="img slider__img" src="agartumsathho.jfif" alt="cover">
<img class="img slider__img" src="darkhaast.jfif" alt="cover">
<img class="img slider__img" src="baarishein.jfif" alt="cover">
</div>
</div>
<div class="player__controls">
<button class="player__button back">
<img class="img" src="http://physical-authority.surge.sh/imgs/icon/back.svg" alt="back-icon">
</button>
<p class="player__context slider__context">
<strong class="slider__name"></strong>
<span class="player__title slider__title"></span>
</p>
<button class="player__button next">
<img class="img" src="http://physical-authority.surge.sh/imgs/icon/next.svg" alt="next-icon">
</button>
<div class="progres">
<div class="progres__filled"></div>
</div>
</div>
</div>
<ul class="player__playlist list">
<li class="player__song">
<img class="player__img img" src="jotum.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Jo Tum Mere Ho</b>
<span class="flex">
<span class="player__title">Anuv Jain</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Anuv Jain - JO TUM MERE HO (Official Video).mp3" ></audio>
</li>
<li class="player__song">
<img class="player__img img" src="choolo.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Choo Lo</b>
<span class="flex">
<span class="player__title">The Local Train</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="the local train - choo lo (slowed down  reverb).mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="bandeya.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Bandeya</b>
<span class="flex">
<span class="player__title">Arijit Singh</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Bandeya (Dil Juunglee) - DjPunjab.Com.Se.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="aaj bhi.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Aaj Bhi</b>
<span class="flex">
<span class="player__title">Vishal Mishra</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Aaj Bhi - Vishal Mishra ( Slowed & Reverb ).mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="terigalliyan.jfif" alt="cover">
<p class="player__context ">
<b class="player__song-name">Teri Galliyan</b>
<span class="flex">
<span class="player__title">Ek Villain</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Teri Galliyan SlowedReverb.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="tu hi meri shab hai.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Tu HI Meri Shab Hai</b>
<span class="flex">
<span class="player__title">KK</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Tu Hi Meri Shab Hai LoFi.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="tum ho.jfif" alt="cover">
<p class="player__context ">
<b class="player__song-name">Tum Ho <span class="uppercase">Rockstar</span> Lofi</b>
<span class="flex">
<span class="player__title">Mohit Chauhan</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Tum Ho Mohit Chauhan Rockstar slowed reverb.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="ishq.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Ishq</b>
<span class="flex">
<span class="player__title">Lost Found</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Ishq (-Lost  Found) (Slowed Reverb) by Faheem Abdullah  Mosethic.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="terebina.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Tere bina</b>
<span class="flex">
<span class="player__title">Arijit Singh</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Tere Bina - { slowed + reverb } _ 1921 _ Arijit Singh & Aakanksha Sharma_FSLTs7aNrQ8.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="kesariya.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Kesariya</b>
<span class="flex">
<span class="player__title">Arijit Singh</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Kesariya_320(PagalWorld.com.sb).mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="piyaaayena.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Piya Aaye Na </b>
<span class="flex">
<span class="player__title">KK (Aashiqui2)</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Piya Aaye Na Slowed and Reverb  Tulsi kumar  Inure.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="agartumsathho.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Agar Tum Sath Ho </b>
<span class="flex">
<span class="player__title">Alka & Arijit</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Agar tum Saath Ho SlowedReverb ALKA YAGNIK lofiz.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="darkhaast.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Darkhaast </b>
<span class="flex">
<span class="player__title">Arijit Singh</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Darkhaast SlowedReverb.mp3"></audio>
</li>
<li class="player__song">
<img class="player__img img" src="baarishein.jfif" alt="cover">
<p class="player__context">
<b class="player__song-name">Baarishein </b>
<span class="flex">
<span class="player__title">Anuv Jain</span>
<span class="player__song-time"></span>
</span>
</p>
<audio class="audio" src="Baarishein slowed  reverb  Anuv Jain  Textaudio.mp3"></audio>
</li>
</ul>
</div>
<body>
  <div>
     <div class="wave"></div>
     <div class="wave"></div>
     <div class="wave"></div>
  </div>
</body>
<script>
 // Designed by: Mauricio Bucardo
// Original image: https://dribbble.com/shots/6957353-Music-Player-Widget
"use strict";
// add elemnts
const bgBody = ["#e5e7e9", "#ff4545", "#f8ded3", "#ffc382", "#f5eda6", "#ffcbdc", "#dcf3f3"];
const body = document.body;
const player = document.querySelector(".player");
const playerHeader = player.querySelector(".player__header");
const playerControls = player.querySelector(".player__controls");
const playerPlayList = player.querySelectorAll(".player__song");
const playerSongs = player.querySelectorAll(".audio");
const playButton = player.querySelector(".play");
const nextButton = player.querySelector(".next");
const backButton = player.querySelector(".back");
const playlistButton = player.querySelector(".playlist");
const slider = player.querySelector(".slider");
const sliderContext = player.querySelector(".slider__context");
const sliderName = sliderContext.querySelector(".slider__name");
const sliderTitle = sliderContext.querySelector(".slider__title");
const sliderContent = slider.querySelector(".slider__content");
const sliderContentLength = playerPlayList.length - 1;
const sliderWidth = 100;
let left = 0;
let count = 0;
let song = playerSongs[count];
let isPlay = false;
const pauseIcon = playButton.querySelector("img[alt = 'pause-icon']");
const playIcon = playButton.querySelector("img[alt = 'play-icon']");
const progres = player.querySelector(".progres");
const progresFilled = progres.querySelector(".progres__filled");
let isMove = false;
// creat functions
function openPlayer() {
playerHeader.classList.add("open-header");
playerControls.classList.add("move");
slider.classList.add("open-slider");
}
function closePlayer() {
playerHeader.classList.remove("open-header");
playerControls.classList.remove("move");
slider.classList.remove("open-slider");
}
function next(index) {
count = index || count;
if (count == sliderContentLength) {
count = count;
return;
}
left = (count + 1) * sliderWidth;
left = Math.min(left, (sliderContentLength) * sliderWidth);
sliderContent.style.transform = `translate3d(-${left}%, 0, 0)`;
count++;
run();
}
function back(index) {
count = index || count;
if (count == 0) {
count = count;
return;
}
left = (count - 1) * sliderWidth;
left = Math.max(0, left);
sliderContent.style.transform = `translate3d(-${left}%, 0, 0)`;
count--;
run();
}
function changeSliderContext() {
sliderContext.style.animationName = "opacity";
sliderName.textContent = playerPlayList[count].querySelector(".player__title").textContent;
sliderTitle.textContent = playerPlayList[count].querySelector(".player__song-name").textContent;
if (sliderName.textContent.length > 16) {
const textWrap = document.createElement("span");
textWrap.className = "text-wrap";
textWrap.innerHTML = sliderName.textContent + " " + sliderName.textContent;
sliderName.innerHTML = "";
sliderName.append(textWrap);
}
if (sliderTitle.textContent.length >= 18) {
const textWrap = document.createElement("span");
textWrap.className = "text-wrap";
textWrap.innerHTML = sliderTitle.textContent + " " + sliderTitle.textContent;
sliderTitle.innerHTML = "";
sliderTitle.append(textWrap);
}
}
function changeBgBody() {
body.style.backgroundColor = bgBody[count];
}
function selectSong() {
song = playerSongs[count];
for (const item of playerSongs) {
if (item != song) {
item.pause();
item.currentTime = 0;
}
}
if (isPlay) song.play();
}
function run() {
changeSliderContext();
changeBgBody();
selectSong();
}
function playSong() {
if (song.paused) {
song.play();
playIcon.style.display = "none";
pauseIcon.style.display = "block";
}else{
song.pause();
isPlay = false;
playIcon.style.display = "";
pauseIcon.style.display = "";
}
}
function progresUpdate() {
const progresFilledWidth = (this.currentTime / this.duration) * 100 + "%";
progresFilled.style.width = progresFilledWidth;
if (isPlay && this.duration == this.currentTime) {
next();
}
if (count == sliderContentLength && song.currentTime == song.duration) {
playIcon.style.display = "block";
pauseIcon.style.display = "";
isPlay = false;
}
}
function scurb(e) {
// If we use e.offsetX, we have trouble setting the song time, when the mousemove is running
const currentTime = ( (e.clientX - progres.getBoundingClientRect().left) / progres.offsetWidth ) * song.duration;
song.currentTime = currentTime;
}
function durationSongs() {
let min = parseInt(this.duration / 60);
if (min < 10) min = "0" + min;
let sec = parseInt(this.duration % 60);
if (sec < 10) sec = "0" + sec;
const playerSongTime = `${min}:${sec}`;
this.closest(".player__song").querySelector(".player__song-time").append(playerSongTime);
}
changeSliderContext();
// add events
sliderContext.addEventListener("click", openPlayer);
sliderContext.addEventListener("animationend", () => sliderContext.style.animationName ='');
playlistButton.addEventListener("click", closePlayer);
nextButton.addEventListener("click", () => {
next(0)
});
backButton.addEventListener("click", () => {
back(0)
});
playButton.addEventListener("click", () => {
isPlay = true;
playSong();
});
playerSongs.forEach(song => {
song.addEventListener("loadeddata" , durationSongs);
song.addEventListener("timeupdate" , progresUpdate);
});
progres.addEventListener("pointerdown", (e) => {
scurb(e);
isMove = true;
});
document.addEventListener("pointermove", (e) => {
if (isMove) {
scurb(e);
song.muted = true;
}
});
document.addEventListener("pointerup", () => {
isMove = false;
song.muted = false;
});
playerPlayList.forEach((item, index) => {
item.addEventListener("click", function() {
if (index > count) {
next(index - 1);
return;
}
if (index < count) {
back(index + 1);
return;
}
});
});



</script>
</html>